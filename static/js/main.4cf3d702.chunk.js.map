{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","lat","lon","AppID","data","App","useState","setQuery","weather","setWeather","search","e","key","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"0MAIaA,EAAY,uCAAE,WAAMC,GAAN,iBAAAC,EAAA,sEACLC,IAAMC,IAJjB,kDAIyB,CAAEC,OAAO,CACzCC,EAAEL,EACFM,MAAM,SACNC,IAAI,UACJC,KAAK,UACLC,MARU,sCAEa,uBACnBC,EADmB,EACnBA,KADmB,kBAUpBA,GAVoB,2CAAF,sD,eC4CVC,EA7CH,WACR,MAAwBC,mBAAS,IAAjC,mBAAOZ,EAAP,KAAca,EAAd,KACA,EAA2BD,mBAAS,IAApC,mBAAOE,EAAP,KAAeC,EAAf,KACMC,EAAM,uCAAE,WAAMC,GAAN,eAAAhB,EAAA,yDACC,UAARgB,EAAEC,IADK,gCAGYnB,EAAaC,GAHzB,OAGAU,EAHA,OAINK,EAAWL,GACXG,EAAS,IALH,2CAAF,sDAUZ,OACI,sBAAKM,UAAU,iBAAf,UACI,oBAAIA,UAAU,OAAd,4BACA,uBACAC,KAAK,OACLC,YAAY,qBACZF,UAAU,SACVG,MAAOtB,EACPuB,SAAU,SAACN,GAAD,OAAKJ,EAASI,EAAEO,OAAOF,QACjCG,WAAYT,IAEfF,EAAQY,MACL,sBAAKP,UAAU,OAAf,UACI,qBAAIA,UAAU,YAAd,UACI,+BAAOL,EAAQa,OACf,8BAAMb,EAAQc,IAAIC,aAEtB,sBAAKV,UAAU,YAAf,UAEQW,KAAKC,MAAOjB,EAAQY,KAAKM,KAAM,QACnC,2CAEJ,sBAAKb,UAAU,OAAf,UACI,qBAAKA,UAAU,YAAYc,IAAG,4CAAuCnB,EAAQA,QAAQ,GAAGoB,KAA1D,WAAyEC,IAAKrB,EAAQA,QAAQ,GAAGsB,cAC/H,4BAAItB,EAAQA,QAAQ,GAAGsB,wBCpC3CC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.4cf3d702.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst URL ='https://api.openweathermap.org/data/2.5/weather';\r\nconst APIKey ='6e52daf8438d59fb4873293fd664ddc4';\r\n\r\nexport const fetchWeather= async(query)=>{\r\nconst { data }= await axios.get(URL,{ params:{\r\n    q:query,\r\n    units:'matric',\r\n    lat:40.863372,\r\n    lon:-74.113181,\r\n    AppID:APIKey,\r\n\r\n}});\r\n\r\nreturn data;\r\n\r\n}","import React ,{useState}from 'react';\r\nimport { fetchWeather } from './api/fetchWeather';\r\nimport './App.css';\r\nconst App = () => {\r\n    const [query, setQuery]=useState('');\r\n    const [weather,setWeather]=useState('');\r\n    const search =async(e)=>{\r\n        if(e.key==='Enter')\r\n        {\r\n            const data= await fetchWeather(query);\r\n            setWeather(data);\r\n            setQuery('');\r\n\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <div className=\"main-container\">\r\n            <h1 className=\"head\">Weather Report</h1>\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"Enter City Name...\"\r\n            className=\"search\"\r\n            value={query}\r\n            onChange={(e)=>setQuery(e.target.value)}\r\n            onKeyPress={search}\r\n            />\r\n        {weather.main && (\r\n            <div className=\"city\">\r\n                <h2 className=\"city-name\">\r\n                    <span>{weather.name}</span>\r\n                    <sup>{weather.sys.country}</sup>\r\n                </h2>\r\n                <div className=\"city-temp\">\r\n                    {\r\n                        Math.round((weather.main.temp)-273.15)}\r\n                    <sup>&deg;C</sup>\r\n                </div>\r\n                <div className=\"info\">\r\n                    <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\r\n                    <p>{weather.weather[0].description}</p>\r\n                </div>\r\n            </div>\r\n        )}        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}